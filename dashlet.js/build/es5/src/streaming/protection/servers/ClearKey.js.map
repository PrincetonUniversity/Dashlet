{"version":3,"sources":["../../../../../../src/streaming/protection/servers/ClearKey.js"],"names":["ClearKey","instance","getServerURLFromMessage","url","getHTTPMethod","getResponseType","getLicenseMessage","serverResponse","hasOwnProperty","keyPairs","i","keys","length","keypair","keyid","kid","replace","key","k","push","KeyPair","ClearKeyKeySet","getErrorResponse","String","fromCharCode","apply","Uint8Array","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"mappings":"sEAwCA,sC,+CACA,oD,gJAzCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;;;;;;;GAYA,QAASA,SAAT,EAAoB,CAEhB,GAAIC,gBAAJ,CAEA,QAASC,wBAAT,CAAiCC,GAAI,yBAArC,CAAgE,CAC5D,MAAOA,IAAP,CACH,CAED,QAASC,cAAT,EAAuB,eAAiB,CACpC,MAAO,MAAP,CACH,CAED,QAASC,gBAAT,EAAyB,gBAAkB,CACvC,MAAO,MAAP,CACH,CAED,QAASC,kBAAT,CAA2BC,cAAc,+BAAzC,CAA0E,CACtE,GAAI,CAACA,eAAeC,cAAf,CAA8B,MAA9B,CAAL,CAA4C,CACxC,MAAO,KAAP,CACH,CACD,GAAIC,UAAW,EAAf,CACA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAIH,eAAeI,IAAf,CAAoBC,MAAxC,CAAgDF,GAAhD,CAAqD,CACjD,GAAIG,SAAUN,eAAeI,IAAf,CAAoBD,CAApB,CAAd,CACA,GAAII,OAAQD,QAAQE,GAAR,CAAYC,OAAZ,CAAoB,IAApB,CAA0B,EAA1B,CAAZ,CACA,GAAIC,KAAMJ,QAAQK,CAAR,CAAUF,OAAV,CAAkB,IAAlB,CAAwB,EAAxB,CAAV,CAEAP,SAASU,IAAT,CAAc,GAAIC,kBAAJ,CAAYN,KAAZ,CAAmBG,GAAnB,CAAd,EACH,CACD,MAAO,IAAII,yBAAJ,CAAmBZ,QAAnB,CAAP,CACH,CAED,QAASa,iBAAT,CAA0Bf,cAAc,+BAAxC,CAAyE,CACrE,MAAOgB,QAAOC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,CAAgC,GAAIC,WAAJ,CAAenB,cAAf,CAAhC,CAAP,CACH,CAEDN,SAAW,CACPC,wBAAyBA,uBADlB,CAEPE,cAAeA,aAFR,CAGPC,gBAAiBA,eAHV,CAIPC,kBAAmBA,iBAJZ,CAKPgB,iBAAkBA,gBALX,CAAX,CAQA,MAAOrB,SAAP,CACH,CAEDD,SAAS2B,qBAAT,CAAiC,UAAjC,C,gBACeC,OAAOC,YAAP,CAAoBC,mBAApB,CAAwC9B,QAAxC,C,CAAmD","file":"ClearKey.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /* message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        let keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            let keypair = serverResponse.keys[i];\n            let keyid = keypair.kid.replace(/=/g, '');\n            let key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */\n"]}