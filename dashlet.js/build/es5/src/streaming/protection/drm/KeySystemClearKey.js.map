{"version":3,"sources":["../../../../../../src/streaming/protection/drm/KeySystemClearKey.js"],"names":["uuid","systemString","ProtectionConstants","CLEARKEY_KEYSTEM_STRING","schemeIdURI","KeySystemClearKey","config","instance","BASE64","LICENSE_SERVER_MANIFEST_CONFIGURATIONS","attributes","prefixes","getClearKeysFromProtectionData","protectionData","message","clearkeySet","jsonMsg","JSON","parse","String","fromCharCode","apply","Uint8Array","keyPairs","i","kids","length","clearkeyID","clearkey","clearkeys","hasOwnProperty","Error","push","KeyPair","ClearKeyKeySet","getInitData","cp","cencContentProtection","initData","CommonEncryption","parseInitDataFromContentProtection","cencDefaultKid","cencDefaultKidToBase64Representation","data","TextEncoder","encode","stringify","e","kid","replace","btoa","match","map","a","parseInt","join","getRequestHeadersFromMessage","getLicenseRequestFromMessage","getLicenseServerURLFromInitData","getLicenseServerUrlFromMediaInfo","mediaInfo","licenseServer","info","contentProtection","clearkeyProtData","filter","schemeIdUri","j","ckData","k","l","attribute","prefix","__prefix","__text","getCDMData","getSessionId","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"KeySystemClearKey.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = 'e2719d58-a985-b3c9-781a-b030af78d30e';\nconst systemString = ProtectionConstants.CLEARKEY_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemClearKey(config) {\n\n    config = config || {};\n    let instance;\n    const BASE64 = config.BASE64;\n    const LICENSE_SERVER_MANIFEST_CONFIGURATIONS = {\n        attributes: ['Laurl', 'laurl'],\n        prefixes: ['clearkey', 'dashif']\n    };\n\n    /**\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\n     *\n     * @param {ProtectionData} protectionData the protection data\n     * @param {ArrayBuffer} message the ClearKey CDM message\n     * @returns {ClearKeyKeySet} the key set or null if none found\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\n     * protection data\n     * @memberof KeySystemClearKey\n     */\n    function getClearKeysFromProtectionData(protectionData, message) {\n        let clearkeySet = null;\n        if (protectionData) {\n            // ClearKey is the only system that does not require a license server URL, so we\n            // handle it here when keys are specified in protection data\n            const jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n            const keyPairs = [];\n            for (let i = 0; i < jsonMsg.kids.length; i++) {\n                const clearkeyID = jsonMsg.kids[i];\n                const clearkey = (protectionData.clearkeys && protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\n                if (!clearkey) {\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\n                }\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\n            }\n            clearkeySet = new ClearKeyKeySet(keyPairs);\n        }\n        return clearkeySet;\n    }\n\n    function getInitData(cp, cencContentProtection) {\n        try {\n            let initData = CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n\n            if (!initData && cencContentProtection) {\n                const cencDefaultKid = cencDefaultKidToBase64Representation(cencContentProtection['cenc:default_KID']);\n                const data = {kids: [cencDefaultKid]};\n                initData = new TextEncoder().encode(JSON.stringify(data));\n            }\n\n            return initData;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function cencDefaultKidToBase64Representation(cencDefaultKid) {\n        try {\n            let kid = cencDefaultKid.replace(/-/g, '');\n            kid = btoa(kid.match(/\\w{2}/g).map((a) => {\n                return String.fromCharCode(parseInt(a, 16));\n            }).join(''));\n            return kid.replace(/=/g, '');\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function getRequestHeadersFromMessage(/*message*/) {\n        // Set content type to application/json by default\n        return {\n            'Content-Type': 'application/json'\n        };\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\n    }\n\n    function getLicenseServerURLFromInitData(/*initData*/) {\n        return null;\n    }\n\n    function getLicenseServerUrlFromMediaInfo(mediaInfo) {\n        try {\n            if (!mediaInfo || mediaInfo.length === 0) {\n                return null;\n            }\n            let i = 0;\n            let licenseServer = null;\n            while (i < mediaInfo.length && !licenseServer) {\n                const info = mediaInfo[i];\n                if (info && info.contentProtection && info.contentProtection.length > 0) {\n                    const clearkeyProtData = info.contentProtection.filter((cp) => {\n                        return cp.schemeIdUri && cp.schemeIdUri === schemeIdURI;\n                    });\n                    if (clearkeyProtData && clearkeyProtData.length > 0) {\n                        let j = 0;\n                        while (j < clearkeyProtData.length && !licenseServer) {\n                            const ckData = clearkeyProtData[j];\n                            let k = 0;\n                            while (k < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes.length && !licenseServer) {\n                                let l = 0;\n                                const attribute = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes[k];\n                                while (l < LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes.length && !licenseServer) {\n                                    const prefix = LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes[l];\n                                    if (ckData[attribute] && ckData[attribute].__prefix && ckData[attribute].__prefix === prefix && ckData[attribute].__text) {\n                                        licenseServer = ckData[attribute].__text;\n                                    }\n                                    l += 1;\n                                }\n                                k += 1;\n                            }\n                            j += 1;\n                        }\n                    }\n                }\n                i += 1;\n            }\n            return licenseServer;\n        } catch\n            (e) {\n            return null;\n        }\n    }\n\n    function getCDMData() {\n        return null;\n    }\n\n    function getSessionId(/*cp*/) {\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getCDMData: getCDMData,\n        getSessionId: getSessionId,\n        getLicenseServerUrlFromMediaInfo,\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\n    };\n\n    return instance;\n}\n\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemClearKey); /* jshint ignore:line */\n"]}