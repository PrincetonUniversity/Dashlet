{"version":3,"sources":["../../../../../src/streaming/net/SchemeLoaderFactory.js"],"names":["SchemeLoaderFactory","instance","schemeLoaderMap","registerLoader","scheme","loader","unregisterLoader","unregisterAllLoader","getLoader","url","hasOwnProperty","startsWith","HTTPLoader","reset","setup","__dashjs_factory_name","factory","FactoryMaker","getSingletonFactory"],"mappings":"sEA8BA,qD,yDACA,0D,wIAEA;;;;GAjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsCA,QAASA,oBAAT,EAA+B,CAE3B,GAAIC,gBAAJ,CAEA,GAAIC,uBAAJ,CAEA,QAASC,eAAT,CAAwBC,MAAxB,CAAgCC,MAAhC,CAAwC,CACpCH,gBAAgBE,MAAhB,EAA0BC,MAA1B,CACH,CAED,QAASC,iBAAT,CAA0BF,MAA1B,CAAkC,CAC9B,GAAIF,gBAAgBE,MAAhB,CAAJ,CAA6B,CACzB,MAAOF,iBAAgBE,MAAhB,CAAP,CACH,CACJ,CAED,QAASG,oBAAT,EAA+B,CAC3BL,gBAAkB,EAAlB,CACH,CAED,QAASM,UAAT,CAAmBC,GAAnB,CAAwB,CAEpB;AACA,IAAK,GAAIL,OAAT,GAAmBF,gBAAnB,CAAoC,CAChC,GAAIA,gBAAgBQ,cAAhB,CAA+BN,MAA/B,GAA0CK,IAAIE,UAAJ,CAAeP,MAAf,CAA9C,CAAsE,CAClE,MAAOF,iBAAgBE,MAAhB,CAAP,CACH,CACJ,CAED,MAAOQ,qBAAP,CACH,CAED,QAASC,MAAT,EAAiB,CACbN,sBACH,CAED,QAASO,MAAT,EAAiB,CACbD,QACH,CAEDC,QAEAb,SAAW,CACPO,UAAWA,SADJ,CAEPL,eAAgBA,cAFT,CAGPG,iBAAkBA,gBAHX,CAIPC,oBAAqBA,mBAJd,CAKPM,MAAOA,KALA,CAAX,CAQA,MAAOZ,SAAP,CACH,CAEDD,oBAAoBe,qBAApB,CAA4C,qBAA5C,CACA,GAAMC,SAAUC,uBAAaC,mBAAb,CAAiClB,mBAAjC,CAAhB,C,gBACegB,O","file":"SchemeLoaderFactory.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport HTTPLoader from '../../streaming/net/HTTPLoader';\n\n/**\n * @module\n * @description Choose right url loader for scheme\n * @ignore\n */\nfunction SchemeLoaderFactory() {\n\n    let instance;\n\n    let schemeLoaderMap;\n\n    function registerLoader(scheme, loader) {\n        schemeLoaderMap[scheme] = loader;\n    }\n\n    function unregisterLoader(scheme) {\n        if (schemeLoaderMap[scheme]) {\n            delete schemeLoaderMap[scheme];\n        }\n    }\n\n    function unregisterAllLoader() {\n        schemeLoaderMap = {};\n    }\n\n    function getLoader(url) {\n\n        // iterates through schemeLoaderMap to find a loader for the scheme\n        for (var scheme in schemeLoaderMap) {\n            if (schemeLoaderMap.hasOwnProperty(scheme) && url.startsWith(scheme)) {\n                return schemeLoaderMap[scheme];\n            }\n        }\n\n        return HTTPLoader;\n    }\n\n    function reset() {\n        unregisterAllLoader();\n    }\n\n    function setup() {\n        reset();\n    }\n\n    setup();\n\n    instance = {\n        getLoader: getLoader,\n        registerLoader: registerLoader,\n        unregisterLoader: unregisterLoader,\n        unregisterAllLoader: unregisterAllLoader,\n        reset: reset\n    };\n\n    return instance;\n}\n\nSchemeLoaderFactory.__dashjs_factory_name = 'SchemeLoaderFactory';\nconst factory = FactoryMaker.getSingletonFactory(SchemeLoaderFactory);\nexport default factory;\n"]}