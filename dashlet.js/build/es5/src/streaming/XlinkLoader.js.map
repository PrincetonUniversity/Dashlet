{"version":3,"sources":["../../../../src/streaming/XlinkLoader.js"],"names":["XlinkLoader","config","RESOLVE_TO_ZERO","context","eventBus","getInstance","urlLoader","create","errHandler","dashMetrics","mediaPlayerModel","requestModifier","useFetch","settings","get","streaming","lowLatencyEnabled","errors","Errors","instance","load","url","element","resolveObject","report","content","resolveToZero","resolved","resolvedContent","trigger","Events","XLINK_ELEMENT_LOADED","error","DashJSError","XLINK_LOADER_LOADING_FAILURE_ERROR_CODE","XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE","request","TextRequest","HTTPRequest","XLINK_EXPANSION_TYPE","success","data","reset","abort","__dashjs_factory_name","FactoryMaker","getClassFactory"],"mappings":"sEA8BA,6C,uDACA,0C,mDACA,qDACA,6C,uDACA,0C,iDACA,6C,6CACA,kD,yDACA,6C,gIArCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuCA,QAASA,YAAT,CAAqBC,MAArB,CAA6B,CAEzBA,OAASA,QAAU,EAAnB,CACA,GAAMC,iBAAkB,oCAAxB,CAEA,GAAMC,SAAW,KAAKA,OAAtB,CACA,GAAMC,UAAW,uBAASD,OAAT,EAAkBE,WAAlB,EAAjB,CAEA,GAAIC,WAAY,wBAAUH,OAAV,EAAmBI,MAAnB,CAA0B,CACtCC,WAAYP,OAAOO,UADmB,CAEtCC,YAAaR,OAAOQ,WAFkB,CAGtCC,iBAAkBT,OAAOS,gBAHa,CAItCC,gBAAiBV,OAAOU,eAJc,CAKtCC,SAAUX,OAAOY,QAAP,CAAkBZ,OAAOY,QAAP,CAAgBC,GAAhB,GAAsBC,SAAtB,CAAgCC,iBAAlD,CAAsE,IAL1C,CAMtCC,OAAQC,gBAN8B,CAA1B,CAAhB,CASA,GAAIC,gBAAJ,CAEA,QAASC,KAAT,CAAcC,GAAd,CAAmBC,OAAnB,CAA4BC,aAA5B,CAA2C,CACvC,GAAMC,QAAS,QAATA,OAAS,CAAUC,OAAV,CAAmBC,aAAnB,CAAkC,CAC7CJ,QAAQK,QAAR,CAAmB,IAAnB,CACAL,QAAQM,eAAR,CAA0BH,QAAUA,OAAV,CAAoB,IAA9C,CAEArB,SAASyB,OAAT,CAAiBC,iBAAOC,oBAAxB,CAA8C,CAC1CT,QAASA,OADiC,CAE1CC,cAAeA,aAF2B,CAG1CS,MAAOP,SAAWC,aAAX,CACH,IADG,CAEH,GAAIO,sBAAJ,CACIf,iBAAOgB,uCADX,CAEIhB,iBAAOiB,0CAAP,CAAoDd,GAFxD,CALsC,CAA9C,EAUH,CAdD,CAgBA,GAAIA,MAAQnB,eAAZ,CAA6B,CACzBsB,OAAO,IAAP,CAAa,IAAb,EACH,CAFD,IAEO,CACH,GAAMY,SAAU,GAAIC,sBAAJ,CAAgBhB,GAAhB,CAAqBiB,yBAAYC,oBAAjC,CAAhB,CAEAjC,UAAUc,IAAV,CAAe,CACXgB,QAASA,OADE,CAEXI,QAAS,iBAAUC,IAAV,CAAgB,CACrBjB,OAAOiB,IAAP,EACH,CAJU,CAKXT,MAAO,gBAAY,CACfR,OAAO,IAAP,EACH,CAPU,CAAf,EASH,CACJ,CAED,QAASkB,MAAT,EAAiB,CACb,GAAIpC,SAAJ,CAAe,CACXA,UAAUqC,KAAV,GACArC,UAAY,IAAZ,CACH,CACJ,CAEDa,SAAW,CACPC,KAAMA,IADC,CAEPsB,MAAOA,KAFA,CAAX,CAKA,MAAOvB,SAAP,CACH,CAEDnB,YAAY4C,qBAAZ,CAAoC,aAApC,C,gBACeC,uBAAaC,eAAb,CAA6B9C,WAA7B,C","file":"XlinkLoader.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from './vo/DashJSError';\nimport URLLoader from './net/URLLoader';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport TextRequest from './vo/TextRequest';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Errors from '../core/errors/Errors';\n\nfunction XlinkLoader(config) {\n\n    config = config || {};\n    const RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\n    const context  = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let urlLoader = URLLoader(context).create({\n        errHandler: config.errHandler,\n        dashMetrics: config.dashMetrics,\n        mediaPlayerModel: config.mediaPlayerModel,\n        requestModifier: config.requestModifier,\n        useFetch: config.settings ? config.settings.get().streaming.lowLatencyEnabled : null,\n        errors: Errors\n    });\n\n    let instance;\n\n    function load(url, element, resolveObject) {\n        const report = function (content, resolveToZero) {\n            element.resolved = true;\n            element.resolvedContent = content ? content : null;\n\n            eventBus.trigger(Events.XLINK_ELEMENT_LOADED, {\n                element: element,\n                resolveObject: resolveObject,\n                error: content || resolveToZero ?\n                    null :\n                    new DashJSError(\n                        Errors.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE,\n                        Errors.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE + url\n                    )\n            });\n        };\n\n        if (url === RESOLVE_TO_ZERO) {\n            report(null, true);\n        } else {\n            const request = new TextRequest(url, HTTPRequest.XLINK_EXPANSION_TYPE);\n\n            urlLoader.load({\n                request: request,\n                success: function (data) {\n                    report(data);\n                },\n                error: function () {\n                    report(null);\n                }\n            });\n        }\n    }\n\n    function reset() {\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    instance = {\n        load: load,\n        reset: reset\n    };\n\n    return instance;\n}\n\nXlinkLoader.__dashjs_factory_name = 'XlinkLoader';\nexport default FactoryMaker.getClassFactory(XlinkLoader);\n"]}