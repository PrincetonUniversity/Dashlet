{"version":3,"sources":["../../../../../../src/streaming/rules/scheduling/BufferLevelRule.js"],"names":["BufferLevelRule","config","dashMetrics","mediaPlayerModel","textController","abrController","settings","setup","execute","type","representationInfo","bufferLevel","getCurrentBufferLevel","getBufferTarget","bufferTarget","NaN","Constants","FRAGMENTED_TEXT","isTextEnabled","isNaN","fragmentDuration","schedulingInfo","getCurrentSchedulingInfo","MetricsConstants","SCHEDULING_INFO","duration","streamInfo","mediaInfo","isPlayingAtTopQuality","isLongFormContent","manifestInfo","get","streaming","longFormContentDurationThreshold","bufferTimeAtTopQualityLongForm","bufferTimeAtTopQuality","getStableBufferTime","instance","__dashjs_factory_name","FactoryMaker","getClassFactory"],"mappings":"sEA8BA,oD,mDACA,wD,yDACA,kE,oJAEA,QAASA,gBAAT,CAAyBC,MAAzB,CAAiC,CAE7BA,OAASA,QAAU,EAAnB,CACA,GAAMC,aAAcD,OAAOC,WAA3B,CACA,GAAMC,kBAAmBF,OAAOE,gBAAhC,CACA,GAAMC,gBAAiBH,OAAOG,cAA9B,CACA,GAAMC,eAAgBJ,OAAOI,aAA7B,CACA,GAAMC,UAAWL,OAAOK,QAAxB,CAEA,QAASC,MAAT,EAAiB,CAChB,CAED,QAASC,QAAT,CAAiBC,IAAjB,CAAuBC,kBAAvB,CAA2C,CACvC,GAAI,CAACD,IAAD,EAAS,CAACC,kBAAd,CAAkC,CAC9B,MAAO,KAAP,CACH,CACD,GAAMC,aAAcT,YAAYU,qBAAZ,CAAkCH,IAAlC,CAApB,CACA,MAAOE,aAAcE,gBAAgBJ,IAAhB,CAAsBC,kBAAtB,CAArB,CACH,CAED,QAASG,gBAAT,CAAyBJ,IAAzB,CAA+BC,kBAA/B,CAAmD,CAC/C,GAAII,cAAeC,GAAnB,CAEA,GAAI,CAACN,IAAD,EAAS,CAACC,kBAAd,CAAkC,CAC9B,MAAOI,aAAP,CACH,CAED,GAAIL,OAASO,oBAAUC,eAAvB,CAAwC,CACpC,GAAIb,eAAec,aAAf,EAAJ,CAAoC,CAChC,GAAIC,MAAMT,mBAAmBU,gBAAzB,CAAJ,CAAgD,CAAE;AAC9C;AACA;AACA,GAAMC,gBAAiBnB,YAAYoB,wBAAZ,CAAqCC,2BAAiBC,eAAtD,CAAvB,CACAV,aAAeO,eAAiBA,eAAeI,QAAhC,CAA2C,CAA1D,CACH,CALD,IAKO,CACHX,aAAeJ,mBAAmBU,gBAAlC,CACH,CACJ,CATD,IASO,CAAE;AACLN,aAAe,CAAf,CACH,CACJ,CAbD,IAaQ,CACJ,GAAMY,YAAahB,mBAAmBiB,SAAnB,CAA6BD,UAAhD,CACA,GAAIrB,cAAcuB,qBAAd,CAAoCF,UAApC,CAAJ,CAAqD,CACjD,GAAMG,mBAAoBH,WAAWI,YAAX,CAAwBL,QAAxB,EAAoCnB,SAASyB,GAAT,GAAeC,SAAf,CAAyBC,gCAAvF,CACAnB,aAAee,kBAAoBvB,SAASyB,GAAT,GAAeC,SAAf,CAAyBE,8BAA7C,CAA8E5B,SAASyB,GAAT,GAAeC,SAAf,CAAyBG,sBAAtH,CACH,CAHD,IAGO,CACHrB,aAAeX,iBAAiBiC,mBAAjB,EAAf,CACH,CACJ,CACD,MAAOtB,aAAP,CACH,CAED,GAAMuB,UAAW,CACb7B,QAASA,OADI,CAEbK,gBAAiBA,eAFJ,CAAjB,CAKAN,QACA,MAAO8B,SAAP,CACH,CA7FD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+FArC,gBAAgBsC,qBAAhB,CAAwC,iBAAxC,C,gBACeC,uBAAaC,eAAb,CAA6BxC,eAA7B,C","file":"BufferLevelRule.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../constants/Constants';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport MetricsConstants from '../../constants/MetricsConstants';\n\nfunction BufferLevelRule(config) {\n\n    config = config || {};\n    const dashMetrics = config.dashMetrics;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const textController = config.textController;\n    const abrController = config.abrController;\n    const settings = config.settings;\n\n    function setup() {\n    }\n\n    function execute(type, representationInfo) {\n        if (!type || !representationInfo) {\n            return true;\n        }\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(type);\n        return bufferLevel < getBufferTarget(type, representationInfo);\n    }\n\n    function getBufferTarget(type, representationInfo) {\n        let bufferTarget = NaN;\n\n        if (!type || !representationInfo) {\n            return bufferTarget;\n        }\n\n        if (type === Constants.FRAGMENTED_TEXT) {\n            if (textController.isTextEnabled()) {\n                if (isNaN(representationInfo.fragmentDuration)) { //fragmentDuration of representationInfo is not defined,\n                    // call metrics function to have data in the latest scheduling info...\n                    // if no metric, returns 0. In this case, rule will return false.\n                    const schedulingInfo = dashMetrics.getCurrentSchedulingInfo(MetricsConstants.SCHEDULING_INFO);\n                    bufferTarget = schedulingInfo ? schedulingInfo.duration : 0;\n                } else {\n                    bufferTarget = representationInfo.fragmentDuration;\n                }\n            } else { // text is disabled, rule will return false\n                bufferTarget = 0;\n            }\n        }  else {\n            const streamInfo = representationInfo.mediaInfo.streamInfo;\n            if (abrController.isPlayingAtTopQuality(streamInfo)) {\n                const isLongFormContent = streamInfo.manifestInfo.duration >= settings.get().streaming.longFormContentDurationThreshold;\n                bufferTarget = isLongFormContent ? settings.get().streaming.bufferTimeAtTopQualityLongForm : settings.get().streaming.bufferTimeAtTopQuality;\n            } else {\n                bufferTarget = mediaPlayerModel.getStableBufferTime();\n            }\n        }\n        return bufferTarget;\n    }\n\n    const instance = {\n        execute: execute,\n        getBufferTarget: getBufferTarget\n    };\n\n    setup();\n    return instance;\n}\n\nBufferLevelRule.__dashjs_factory_name = 'BufferLevelRule';\nexport default FactoryMaker.getClassFactory(BufferLevelRule);\n"]}