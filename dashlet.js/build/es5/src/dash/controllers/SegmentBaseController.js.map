{"version":3,"sources":["../../../../../src/dash/controllers/SegmentBaseController.js"],"names":["SegmentBaseController","config","context","eventBus","events","dashMetrics","mediaPlayerModel","errHandler","baseURLController","debug","boxParser","requestModifier","errors","instance","segmentBaseLoader","webmSegmentBaseLoader","setup","getInstance","setConfig","isWebM","mimeType","type","split","toLowerCase","initialize","on","SEGMENTBASE_INIT_REQUEST_NEEDED","onInitSegmentBaseNeeded","SEGMENTBASE_SEGMENTSLIST_REQUEST_NEEDED","onSegmentsListSegmentBaseNeeded","e","loadInitialization","representation","loadSegments","mediaType","indexRange","callback","reset","off","__dashjs_factory_name","factory","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"SegmentBaseController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nimport SegmentBaseLoader from '../SegmentBaseLoader';\nimport WebmSegmentBaseLoader from '../WebmSegmentBaseLoader';\n\nfunction SegmentBaseController(config) {\n    config = config || {};\n\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const dashMetrics = config.dashMetrics;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const errHandler = config.errHandler;\n    const baseURLController = config.baseURLController;\n    const debug = config.debug;\n    const boxParser = config.boxParser;\n    const requestModifier = config.requestModifier;\n    const errors = config.errors;\n\n    let instance,\n        segmentBaseLoader,\n        webmSegmentBaseLoader;\n\n    function setup() {\n        segmentBaseLoader = SegmentBaseLoader(context).getInstance();\n        webmSegmentBaseLoader = WebmSegmentBaseLoader(context).getInstance();\n\n        segmentBaseLoader.setConfig({\n            baseURLController: baseURLController,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            errHandler: errHandler,\n            eventBus: eventBus,\n            events: events,\n            errors: errors,\n            debug: debug,\n            boxParser: boxParser,\n            requestModifier: requestModifier\n        });\n\n        webmSegmentBaseLoader.setConfig({\n            baseURLController: baseURLController,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            errHandler: errHandler,\n            eventBus: eventBus,\n            events: events,\n            errors: errors,\n            debug: debug,\n            requestModifier: requestModifier\n        });\n    }\n\n    function isWebM(mimeType) {\n        const type = mimeType ? mimeType.split('/')[1] : '';\n        return 'webm' === type.toLowerCase();\n    }\n\n    function initialize() {\n        eventBus.on(events.SEGMENTBASE_INIT_REQUEST_NEEDED, onInitSegmentBaseNeeded, instance);\n        eventBus.on(events.SEGMENTBASE_SEGMENTSLIST_REQUEST_NEEDED, onSegmentsListSegmentBaseNeeded, instance);\n\n        segmentBaseLoader.initialize();\n        webmSegmentBaseLoader.initialize();\n    }\n\n    function onInitSegmentBaseNeeded(e) {\n        if (isWebM(e.mimeType)) {\n            webmSegmentBaseLoader.loadInitialization(e.representation);\n        } else {\n            segmentBaseLoader.loadInitialization(e.representation);\n        }\n    }\n\n    function onSegmentsListSegmentBaseNeeded(e) {\n        if (isWebM(e.mimeType)) {\n            webmSegmentBaseLoader.loadSegments(e.representation, e.mediaType, e.representation ? e.representation.indexRange : null, e.callback);\n        } else {\n            segmentBaseLoader.loadSegments(e.representation, e.mediaType, e.representation ? e.representation.indexRange : null, e.callback);\n        }\n    }\n\n    function reset() {\n        eventBus.off(events.SEGMENTBASE_INIT_REQUEST_NEEDED, onInitSegmentBaseNeeded, instance);\n        eventBus.off(events.SEGMENTBASE_SEGMENTSLIST_REQUEST_NEEDED, onSegmentsListSegmentBaseNeeded, instance);\n    }\n\n    instance = {\n        initialize: initialize,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentBaseController.__dashjs_factory_name = 'SegmentBaseController';\nconst factory = FactoryMaker.getSingletonFactory(SegmentBaseController);\nexport default factory;\n"]}