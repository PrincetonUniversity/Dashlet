{"version":3,"sources":["../../../../src/dash/WebmSegmentBaseLoader.js"],"names":["WebmSegmentBaseLoader","context","instance","logger","WebM","errHandler","requestModifier","dashMetrics","mediaPlayerModel","urlLoader","settings","eventBus","events","errors","baseURLController","setup","EBML","tag","required","Segment","SeekHead","Info","TimecodeScale","parse","Duration","Tracks","Cues","CuePoint","CueTime","CueTrackPositions","CueTrack","CueClusterPosition","Void","initialize","create","useFetch","get","streaming","lowLatencyEnabled","setConfig","config","Error","Constants","MISSING_CONFIG_ERROR","debug","getLogger","parseCues","ab","cues","ebmlParser","data","cue","cueTrack","consumeTagAndSize","moreData","parseTag","CueTracks","consumeTag","cueTrackPositionSize","getMatroskaCodedNum","startPos","getPos","Track","ClusterPosition","push","setPos","length","parseSegments","segmentStart","segmentEnd","segmentDuration","duration","parsed","segments","segment","i","len","start","end","startTime","timescale","mediaRange","parseEbmlHeader","media","theRange","callback","byteLength","parts","split","request","info","url","range","parseFloat","skipOverElement","undefined","infoTag","infoElementSize","getFragmentRequest","onload","response","onloadend","error","load","success","checkConfig","hasOwnProperty","loadInitialization","representation","loadingInfo","baseUrl","resolve","path","initRange","init","mediaType","adaptation","type","trigger","INITIALIZATION_LOADED","loadSegments","bytesToLoad","bytesLoaded","onLoaded","SEGMENTS_LOADED","DashJSError","SEGMENT_BASE_LOADER_ERROR_CODE","SEGMENT_BASE_LOADER_ERROR_MESSAGE","FragmentRequest","setInfo","reset","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"sEAAA,yD,qDACA,2D,mDACA,kD,yDACA,qC,+CACA,gE,+DACA,qD,mDACA,wD,0IAEA,QAASA,sBAAT,EAAiC,CAE7B,GAAMC,SAAU,KAAKA,OAArB,CAEA,GAAIC,gBAAJ,CACIC,aADJ,CAEIC,WAFJ,CAGIC,iBAHJ,CAIIC,sBAJJ,CAKIC,kBALJ,CAMIC,uBANJ,CAOIC,gBAPJ,CAQIC,eARJ,CASIC,eATJ,CAUIC,aAVJ,CAWIC,aAXJ,CAYIC,wBAZJ,CAcA,QAASC,MAAT,EAAiB,CACbX,KAAO,CACHY,KAAM,CACFC,IAAK,UADH,CAEFC,SAAU,IAFR,CADH,CAKHC,QAAS,CACLF,IAAK,UADA,CAELC,SAAU,IAFL,CAGLE,SAAU,CACNH,IAAK,UADC,CAENC,SAAU,IAFJ,CAHL,CAOLG,KAAM,CACFJ,IAAK,UADH,CAEFC,SAAU,IAFR,CAGFI,cAAe,CACXL,IAAK,QADM,CAEXC,SAAU,IAFC,CAGXK,MAAO,iBAHI,CAHb,CAQFC,SAAU,CACNP,IAAK,MADC,CAENC,SAAU,IAFJ,CAGNK,MAAO,kBAHD,CARR,CAPD,CAqBLE,OAAQ,CACJR,IAAK,UADD,CAEJC,SAAU,IAFN,CArBH,CAyBLQ,KAAM,CACFT,IAAK,UADH,CAEFC,SAAU,IAFR,CAGFS,SAAU,CACNV,IAAK,IADC,CAENC,SAAU,IAFJ,CAGNU,QAAS,CACLX,IAAK,IADA,CAELC,SAAU,IAFL,CAGLK,MAAO,iBAHF,CAHH,CAQNM,kBAAmB,CACfZ,IAAK,IADU,CAEfC,SAAU,IAFK,CAGfY,SAAU,CACNb,IAAK,IADC,CAENC,SAAU,IAFJ,CAGNK,MAAO,iBAHD,CAHK,CAQfQ,mBAAoB,CAChBd,IAAK,IADW,CAEhBC,SAAU,IAFM,CAGhBK,MAAO,iBAHS,CARL,CARb,CAHR,CAzBD,CALN,CA0DHS,KAAM,CACFf,IAAK,IADH,CAEFC,SAAU,IAFR,CA1DH,CAAP,CA+DH,CAED,QAASe,WAAT,EAAsB,CAClBxB,UAAY,wBAAUR,OAAV,EAAmBiC,MAAnB,CAA0B,CAClC7B,WAAYA,UADsB,CAElCE,YAAaA,WAFqB,CAGlCC,iBAAkBA,gBAHgB,CAIlCF,gBAAiBA,eAJiB,CAKlC6B,SAAUzB,SAAWA,SAAS0B,GAAT,GAAeC,SAAf,CAAyBC,iBAApC,CAAwD,IALhC,CAMlCzB,OAAQA,MAN0B,CAA1B,CAAZ,CAQH,CAED,QAAS0B,UAAT,CAAmBC,MAAnB,CAA2B,CACvB,GAAI,CAACA,OAAO1B,iBAAR,EAA6B,CAAC0B,OAAOjC,WAArC,EAAoD,CAACiC,OAAOhC,gBAA5D,EAAgF,CAACgC,OAAOnC,UAA5F,CAAwG,CACpG,KAAM,IAAIoC,MAAJ,CAAUC,oBAAUC,oBAApB,CAAN,CACH,CACD7B,kBAAoB0B,OAAO1B,iBAA3B,CACAP,YAAciC,OAAOjC,WAArB,CACAC,iBAAmBgC,OAAOhC,gBAA1B,CACAH,WAAamC,OAAOnC,UAApB,CACAK,SAAW8B,OAAO9B,QAAlB,CACAE,OAAS4B,OAAO5B,MAAhB,CACAD,SAAW6B,OAAO7B,QAAlB,CACAE,OAAS2B,OAAO3B,MAAhB,CACAV,OAASqC,OAAOI,KAAP,CAAaC,SAAb,CAAuB3C,QAAvB,CAAT,CACAI,gBAAkBkC,OAAOlC,eAAzB,CACH,CAED,QAASwC,UAAT,CAAmBC,EAAnB,CAAuB,CACnB,GAAIC,MAAO,EAAX,CACA,GAAIC,YAAa,yBAAWhD,OAAX,EAAoBiC,MAApB,CAA2B,CACxCgB,KAAMH,EADkC,CAA3B,CAAjB,CAGA,GAAII,WAAJ,CACIC,eADJ,CAGAH,WAAWI,iBAAX,CAA6BjD,KAAKe,OAAL,CAAaO,IAA1C,EAEA,MAAOuB,WAAWK,QAAX,IACHL,WAAWI,iBAAX,CAA6BjD,KAAKe,OAAL,CAAaO,IAAb,CAAkBC,QAA/C,CAAyD,IAAzD,CADJ,CACoE,CAChEwB,IAAM,EAAN,CAEAA,IAAIvB,OAAJ,CAAcqB,WAAWM,QAAX,CAAoBnD,KAAKe,OAAL,CAAaO,IAAb,CAAkBC,QAAlB,CAA2BC,OAA/C,CAAd,CAEAuB,IAAIK,SAAJ,CAAgB,EAAhB,CACA,MAAOP,WAAWK,QAAX,IACHL,WAAWQ,UAAX,CAAsBrD,KAAKe,OAAL,CAAaO,IAAb,CAAkBC,QAAlB,CAA2BE,iBAAjD,CAAoE,IAApE,CADJ,CAC+E,CAC3E,GAAM6B,sBAAuBT,WAAWU,mBAAX,EAA7B,CACA,GAAMC,UAAWX,WAAWY,MAAX,EAAjB,CACAT,SAAW,EAAX,CAEAA,SAASU,KAAT,CAAiBb,WAAWM,QAAX,CAAoBnD,KAAKe,OAAL,CAAaO,IAAb,CAAkBC,QAAlB,CAA2BE,iBAA3B,CAA6CC,QAAjE,CAAjB,CACA,GAAIsB,SAASU,KAAT,GAAmB,CAAvB,CAA0B,CACtB,KAAM,IAAIrB,MAAJ,CAAU,uBAAV,CAAN,CACH,CAEDW,SAASW,eAAT,CACId,WAAWM,QAAX,CAAoBnD,KAAKe,OAAL,CAAaO,IAAb,CAAkBC,QAAlB,CAA2BE,iBAA3B,CAA6CE,kBAAjE,CADJ,CAGAoB,IAAIK,SAAJ,CAAcQ,IAAd,CAAmBZ,QAAnB,EAEA;AACAH,WAAWgB,MAAX,CAAkBL,SAAWF,oBAA7B,EACH,CAED,GAAIP,IAAIK,SAAJ,CAAcU,MAAd,GAAyB,CAA7B,CAAgC,CAC5B,KAAM,IAAIzB,MAAJ,CAAU,8BAAV,CAAN,CACH,CACDO,KAAKgB,IAAL,CAAUb,GAAV,EACH,CAED,GAAIH,KAAKkB,MAAL,GAAgB,CAApB,CAAuB,CACnB,KAAM,IAAIzB,MAAJ,CAAU,8BAAV,CAAN,CACH,CACD,MAAOO,KAAP,CACH,CAED,QAASmB,cAAT,CAAuBjB,IAAvB,CAA6BkB,YAA7B,CAA2CC,UAA3C,CAAuDC,eAAvD,CAAwE,CACpE,GAAIC,gBAAJ,CACIC,aADJ,CAEIC,eAFJ,CAGIC,cAHJ,CAIIC,QAJJ,CAKIC,UALJ,CAMIC,YANJ,CAOIC,UAPJ,CASAN,OAAS1B,UAAUI,IAAV,CAAT,CACAuB,SAAW,EAAX,CAEA;AACA;AACA;AACA,IAAKE,EAAI,CAAJ,CAAOC,IAAMJ,OAAON,MAAzB,CAAiCS,EAAIC,GAArC,CAA0CD,GAAK,CAA/C,CAAkD,CAC9CD,QAAU,GAAIvD,kBAAJ,EAAV,CACAoD,SAAW,CAAX,CAEA,GAAII,EAAIH,OAAON,MAAP,CAAgB,CAAxB,CAA2B,CACvBK,SAAWC,OAAOG,EAAI,CAAX,EAAc/C,OAAd,CAAwB4C,OAAOG,CAAP,EAAU/C,OAA7C,CACH,CAFD,IAEO,CACH2C,SAAWD,gBAAkBE,OAAOG,CAAP,EAAU/C,OAAvC,CACH,CAED;AACA;AACA8C,QAAQH,QAAR,CAAmBA,QAAnB,CACAG,QAAQK,SAAR,CAAoBP,OAAOG,CAAP,EAAU/C,OAA9B,CACA8C,QAAQM,SAAR,CAAoB,IAApB,CAA0B;AAC1BH,MAAQL,OAAOG,CAAP,EAAUnB,SAAV,CAAoB,CAApB,EAAuBO,eAAvB,CAAyCK,YAAjD,CAEA,GAAIO,EAAIH,OAAON,MAAP,CAAgB,CAAxB,CAA2B,CACvBY,IAAMN,OAAOG,EAAI,CAAX,EAAcnB,SAAd,CAAwB,CAAxB,EAA2BO,eAA3B,CAA6CK,YAA7C,CAA4D,CAAlE,CACH,CAFD,IAEO,CACHU,IAAMT,WAAa,CAAnB,CACH,CAEDK,QAAQO,UAAR,CAAqBJ,MAAQ,GAAR,CAAcC,GAAnC,CACAL,SAAST,IAAT,CAAcU,OAAd,EACH,CAEDvE,OAAOyC,KAAP,CAAa,gBAAkB6B,SAASP,MAA3B,CAAoC,QAAjD,EAEA,MAAOO,SAAP,CACH,CAED,QAASS,gBAAT,CAAyBhC,IAAzB,CAA+BiC,KAA/B,CAAsCC,QAAtC,CAAgDC,QAAhD,CAA0D,CACtD,GAAI,CAACnC,IAAD,EAASA,KAAKoC,UAAL,GAAoB,CAAjC,CAAoC,CAChCD,SAAS,IAAT,EACA,OACH,CACD,GAAIpC,YAAa,yBAAWhD,OAAX,EAAoBiC,MAApB,CAA2B,CACxCgB,KAAMA,IADkC,CAA3B,CAAjB,CAGA,GAAIqB,gBAAJ,CACIE,eADJ,CAEIJ,iBAFJ,CAGID,mBAHJ,CAIA,GAAImB,OAAQH,SAAWA,SAASI,KAAT,CAAe,GAAf,CAAX,CAAiC,IAA7C,CACA,GAAIC,SAAU,IAAd,CACA,GAAIC,MAAO,CACPC,IAAKR,KADE,CAEPS,MAAO,CACHf,MAAOU,MAAQM,WAAWN,MAAM,CAAN,CAAX,CAAR,CAA+B,IADnC,CAEHT,IAAKS,MAAQM,WAAWN,MAAM,CAAN,CAAX,CAAR,CAA+B,IAFjC,CAFA,CAMPE,QAASA,OANF,CAAX,CASAtF,OAAOyC,KAAP,CAAa,sBAAwB8C,KAAKC,GAA1C,EAEA;AACA1C,WAAW6C,eAAX,CAA2B1F,KAAKY,IAAhC,EACAiC,WAAWQ,UAAX,CAAsBrD,KAAKe,OAA3B,EAEA;AACAkD,WAAapB,WAAWU,mBAAX,EAAb,CACAU,YAAcpB,WAAWY,MAAX,EAAd,CACAO,aAAenB,WAAWY,MAAX,EAAf,CAEA;AACA,MAAOZ,WAAWK,QAAX,IACH,CAACL,WAAWI,iBAAX,CAA6BjD,KAAKe,OAAL,CAAaE,IAA1C,CAAgD,IAAhD,CADL,CAC4D,CACxD,GAAI,EAAE4B,WAAW6C,eAAX,CAA2B1F,KAAKe,OAAL,CAAaC,QAAxC,CAAkD,IAAlD,GACE6B,WAAW6C,eAAX,CAA2B1F,KAAKe,OAAL,CAAaM,MAAxC,CAAgD,IAAhD,CADF,EAEEwB,WAAW6C,eAAX,CAA2B1F,KAAKe,OAAL,CAAaO,IAAxC,CAA8C,IAA9C,CAFF,EAGEuB,WAAW6C,eAAX,CAA2B1F,KAAK4B,IAAhC,CAAsC,IAAtC,CAHJ,CAAJ,CAGsD,CAClD,KAAM,IAAIS,MAAJ,CAAU,kCAAV,CAAN,CACH,CACJ,CAED;AACA,MAAO8B,WAAawB,SAApB,CAA+B,CAC3B,GAAIC,SAAU/C,WAAWU,mBAAX,CAA+B,IAA/B,CAAd,CACA,GAAIsC,iBAAkBhD,WAAWU,mBAAX,EAAtB,CAEA,OAAQqC,OAAR,EACI,IAAK5F,MAAKe,OAAL,CAAaE,IAAb,CAAkBG,QAAlB,CAA2BP,GAAhC,CACIsD,SAAWtB,WAAW7C,KAAKe,OAAL,CAAaE,IAAb,CAAkBG,QAAlB,CAA2BD,KAAtC,EAA6C0E,eAA7C,CAAX,CACA,MACJ,QACIhD,WAAWgB,MAAX,CAAkBhB,WAAWY,MAAX,GAAsBoC,eAAxC,EACA,MANR,CAQH,CAED;AACA;AAEAR,QAAUS,mBAAmBR,IAAnB,CAAV,CAEA,GAAMS,QAAS,QAATA,OAAS,CAAUC,QAAV,CAAoB,CAC/B3B,SAAWN,cAAciC,QAAd,CAAwBhC,YAAxB,CAAsCC,UAAtC,CAAkDE,QAAlD,CAAX,CACAc,SAASZ,QAAT,EACH,CAHD,CAKA,GAAM4B,WAAY,QAAZA,UAAY,EAAY,CAC1BlG,OAAOmG,KAAP,CAAa,wBAA0BZ,KAAKC,GAA5C,EACAN,SAAS,IAAT,EACH,CAHD,CAKA5E,UAAU8F,IAAV,CAAe,CACXd,QAASA,OADE,CAEXe,QAASL,MAFE,CAGXG,MAAOD,SAHI,CAAf,EAMAlG,OAAOyC,KAAP,CAAa,sBAAwB8C,KAAKC,GAA7B,CAAmC,SAAnC,CAA+CD,KAAKE,KAAL,CAAWf,KAA1D,CAAkE,GAAlE,CAAwEa,KAAKE,KAAL,CAAWd,GAAhG,EACH,CAED,QAAS2B,YAAT,EAAuB,CACnB,GAAI,CAAC3F,iBAAD,EAAsB,CAACA,kBAAkB4F,cAAlB,CAAiC,SAAjC,CAA3B,CAAwE,CACpE,KAAM,IAAIjE,MAAJ,CAAU,gDAAV,CAAN,CACH,CACJ,CAED,QAASkE,mBAAT,CAA4BC,cAA5B,CAA4CC,WAA5C,CAAyD,CACrDJ,cACA,GAAIhB,SAAU,IAAd,CACA,GAAIqB,SAAUF,eAAiB9F,kBAAkBiG,OAAlB,CAA0BH,eAAeI,IAAzC,CAAjB,CAAkE,IAAhF,CACA,GAAIC,WAAYL,eAAiBA,eAAehB,KAAf,CAAqBJ,KAArB,CAA2B,GAA3B,CAAjB,CAAmD,IAAnE,CACA,GAAIE,MAAOmB,aAAe,CACtBjB,MAAO,CACHf,MAAOoC,UAAYpB,WAAWoB,UAAU,CAAV,CAAX,CAAZ,CAAuC,IAD3C,CAEHnC,IAAKmC,UAAYpB,WAAWoB,UAAU,CAAV,CAAX,CAAZ,CAAuC,IAFzC,CADe,CAKtBxB,QAASA,OALa,CAMtBE,IAAKmB,QAAUA,QAAQnB,GAAlB,CAAwBI,SANP,CAOtBmB,KAAM,IAPgB,CAQtBC,UAAWP,gBAAkBA,eAAeQ,UAAjC,CAA8CR,eAAeQ,UAAf,CAA0BC,IAAxE,CAA+E,IARpE,CAA1B,CAWAlH,OAAOuF,IAAP,CAAY,+BAAZ,EAEAD,QAAUS,mBAAmBR,IAAnB,CAAV,CAEA,GAAMS,QAAS,QAATA,OAAS,EAAY,CACvB;AACA;AACAxF,SAAS2G,OAAT,CAAiB1G,OAAO2G,qBAAxB,CAA+C,CAC3CX,eAAgBA,cAD2B,CAA/C,EAGH,CAND,CAQA,GAAMP,WAAY,QAAZA,UAAY,EAAY,CAC1B1F,SAAS2G,OAAT,CAAiB1G,OAAO2G,qBAAxB,CAA+C,CAC3CX,eAAgBA,cAD2B,CAA/C,EAGH,CAJD,CAMAnG,UAAU8F,IAAV,CAAe,CACXd,QAASA,OADE,CAEXe,QAASL,MAFE,CAGXG,MAAOD,SAHI,CAAf,EAMAlG,OAAOyC,KAAP,CAAa,sBAAwB8C,KAAKC,GAA1C,EACH,CAED,QAAS6B,aAAT,CAAsBZ,cAAtB,CAAsCS,IAAtC,CAA4CjC,QAA5C,CAAsDC,QAAtD,CAAgE,CAC5DoB,cACA,GAAIhB,SAAU,IAAd,CACA,GAAIqB,SAAUF,eAAiB9F,kBAAkBiG,OAAlB,CAA0BH,eAAeI,IAAzC,CAAjB,CAAkE,IAAhF,CACA,GAAI7B,OAAQ2B,QAAUA,QAAQnB,GAAlB,CAAwBI,SAApC,CACA,GAAI0B,aAAc,IAAlB,CACA,GAAI/B,MAAO,CACPgC,YAAa,CADN,CAEPD,YAAaA,WAFN,CAGP7B,MAAO,CACHf,MAAO,CADJ,CAEHC,IAAK2C,WAFF,CAHA,CAOPhC,QAASA,OAPF,CAQPE,IAAKR,KARE,CASP+B,KAAM,KATC,CAUPC,UAAWP,gBAAkBA,eAAeQ,UAAjC,CAA8CR,eAAeQ,UAAf,CAA0BC,IAAxE,CAA+E,IAVnF,CAAX,CAaAhC,SAAW,CAACA,QAAD,CAAYsC,QAAZ,CAAuBtC,QAAlC,CACAI,QAAUS,mBAAmBR,IAAnB,CAAV,CAEA;AACA;AACA;AACAvF,OAAOyC,KAAP,CAAa,qBAAb,EAEA,GAAMuD,QAAS,QAATA,OAAS,CAAUC,QAAV,CAAoB,CAC/BlB,gBAAgBkB,QAAhB,CAA0BjB,KAA1B,CAAiCC,QAAjC,CAA2C,SAAUX,QAAV,CAAoB,CAC3DY,SAASZ,QAAT,CAAmBmC,cAAnB,CAAmCS,IAAnC,EACH,CAFD,EAGH,CAJD,CAMA,GAAMhB,WAAY,QAAZA,UAAY,EAAY,CAC1BhB,SAAS,IAAT,CAAeuB,cAAf,CAA+BS,IAA/B,EACH,CAFD,CAIA5G,UAAU8F,IAAV,CAAe,CACXd,QAASA,OADE,CAEXe,QAASL,MAFE,CAGXG,MAAOD,SAHI,CAAf,EAKH,CAED,QAASsB,SAAT,CAAkBlD,QAAlB,CAA4BmC,cAA5B,CAA4CS,IAA5C,CAAkD,CAC9C,GAAI5C,QAAJ,CAAc,CACV9D,SAAS2G,OAAT,CAAiB1G,OAAOgH,eAAxB,CAAyC,CACrCnD,SAAUA,QAD2B,CAErCmC,eAAgBA,cAFqB,CAGrCO,UAAWE,IAH0B,CAAzC,EAKH,CAND,IAMO,CACH1G,SAAS2G,OAAT,CAAiB1G,OAAOgH,eAAxB,CAAyC,CACrCnD,SAAU,IAD2B,CAErCmC,eAAgBA,cAFqB,CAGrCO,UAAWE,IAH0B,CAIrCf,MAAO,GAAIuB,sBAAJ,CAAgBhH,OAAOiH,8BAAvB,CAAuDjH,OAAOkH,iCAA9D,CAJ8B,CAAzC,EAMH,CACJ,CAED,QAAS7B,mBAAT,CAA4BR,IAA5B,CAAkC,CAC9B,GAAMD,SAAU,GAAIuC,0BAAJ,EAAhB,CACAvC,QAAQwC,OAAR,CAAgBvC,IAAhB,EACA,MAAOD,QAAP,CACH,CAED,QAASyC,MAAT,EAAiB,CACb7H,WAAa,IAAb,CACAC,gBAAkB,IAAlB,CACH,CAEDJ,SAAW,CACPqC,UAAWA,SADJ,CAEPN,WAAYA,UAFL,CAGP0E,mBAAoBA,kBAHb,CAIPa,aAAcA,YAJP,CAKPU,MAAOA,KALA,CAAX,CAQAnH,QAEA,MAAOb,SAAP,CACH,CAEDF,sBAAsBmI,qBAAtB,CAA8C,uBAA9C,C,gBACeC,uBAAaC,mBAAb,CAAiCrI,qBAAjC,C","file":"WebmSegmentBaseLoader.js","sourcesContent":["import EBMLParser from '../streaming/utils/EBMLParser';\nimport Constants from '../streaming/constants/Constants';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Segment from './vo/Segment';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport URLLoader from '../streaming/net/URLLoader';\nimport DashJSError from '../streaming/vo/DashJSError';\n\nfunction WebmSegmentBaseLoader() {\n\n    const context = this.context;\n\n    let instance,\n        logger,\n        WebM,\n        errHandler,\n        requestModifier,\n        dashMetrics,\n        mediaPlayerModel,\n        urlLoader,\n        settings,\n        eventBus,\n        events,\n        errors,\n        baseURLController;\n\n    function setup() {\n        WebM = {\n            EBML: {\n                tag: 0x1A45DFA3,\n                required: true\n            },\n            Segment: {\n                tag: 0x18538067,\n                required: true,\n                SeekHead: {\n                    tag: 0x114D9B74,\n                    required: true\n                },\n                Info: {\n                    tag: 0x1549A966,\n                    required: true,\n                    TimecodeScale: {\n                        tag: 0x2AD7B1,\n                        required: true,\n                        parse: 'getMatroskaUint'\n                    },\n                    Duration: {\n                        tag: 0x4489,\n                        required: true,\n                        parse: 'getMatroskaFloat'\n                    }\n                },\n                Tracks: {\n                    tag: 0x1654AE6B,\n                    required: true\n                },\n                Cues: {\n                    tag: 0x1C53BB6B,\n                    required: true,\n                    CuePoint: {\n                        tag: 0xBB,\n                        required: true,\n                        CueTime: {\n                            tag: 0xB3,\n                            required: true,\n                            parse: 'getMatroskaUint'\n                        },\n                        CueTrackPositions: {\n                            tag: 0xB7,\n                            required: true,\n                            CueTrack: {\n                                tag: 0xF7,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            },\n                            CueClusterPosition: {\n                                tag: 0xF1,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            }\n                        }\n                    }\n                }\n            },\n            Void: {\n                tag: 0xEC,\n                required: true\n            }\n        };\n    }\n\n    function initialize() {\n        urlLoader = URLLoader(context).create({\n            errHandler: errHandler,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: requestModifier,\n            useFetch: settings ? settings.get().streaming.lowLatencyEnabled : null,\n            errors: errors\n        });\n    }\n\n    function setConfig(config) {\n        if (!config.baseURLController || !config.dashMetrics || !config.mediaPlayerModel || !config.errHandler) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n        baseURLController = config.baseURLController;\n        dashMetrics = config.dashMetrics;\n        mediaPlayerModel = config.mediaPlayerModel;\n        errHandler = config.errHandler;\n        settings = config.settings;\n        events = config.events;\n        eventBus = config.eventBus;\n        errors = config.errors;\n        logger = config.debug.getLogger(instance);\n        requestModifier = config.requestModifier;\n    }\n\n    function parseCues(ab) {\n        let cues = [];\n        let ebmlParser = EBMLParser(context).create({\n            data: ab\n        });\n        let cue,\n            cueTrack;\n\n        ebmlParser.consumeTagAndSize(WebM.Segment.Cues);\n\n        while (ebmlParser.moreData() &&\n            ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint, true)) {\n            cue = {};\n\n            cue.CueTime = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTime);\n\n            cue.CueTracks = [];\n            while (ebmlParser.moreData() &&\n                ebmlParser.consumeTag(WebM.Segment.Cues.CuePoint.CueTrackPositions, true)) {\n                const cueTrackPositionSize = ebmlParser.getMatroskaCodedNum();\n                const startPos = ebmlParser.getPos();\n                cueTrack = {};\n\n                cueTrack.Track = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueTrack);\n                if (cueTrack.Track === 0) {\n                    throw new Error('Cue track cannot be 0');\n                }\n\n                cueTrack.ClusterPosition =\n                    ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition);\n\n                cue.CueTracks.push(cueTrack);\n\n                // we're not interested any other elements - skip remaining bytes\n                ebmlParser.setPos(startPos + cueTrackPositionSize);\n            }\n\n            if (cue.CueTracks.length === 0) {\n                throw new Error('Mandatory cuetrack not found');\n            }\n            cues.push(cue);\n        }\n\n        if (cues.length === 0) {\n            throw new Error('mandatory cuepoint not found');\n        }\n        return cues;\n    }\n\n    function parseSegments(data, segmentStart, segmentEnd, segmentDuration) {\n        let duration,\n            parsed,\n            segments,\n            segment,\n            i,\n            len,\n            start,\n            end;\n\n        parsed = parseCues(data);\n        segments = [];\n\n        // we are assuming one cue track per cue point\n        // both duration and media range require the i + 1 segment\n        // the final segment has to use global segment parameters\n        for (i = 0, len = parsed.length; i < len; i += 1) {\n            segment = new Segment();\n            duration = 0;\n\n            if (i < parsed.length - 1) {\n                duration = parsed[i + 1].CueTime - parsed[i].CueTime;\n            } else {\n                duration = segmentDuration - parsed[i].CueTime;\n            }\n\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = parsed[i].CueTime;\n            segment.timescale = 1000; // hardcoded for ms\n            start = parsed[i].CueTracks[0].ClusterPosition + segmentStart;\n\n            if (i < parsed.length - 1) {\n                end = parsed[i + 1].CueTracks[0].ClusterPosition + segmentStart - 1;\n            } else {\n                end = segmentEnd - 1;\n            }\n\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n        }\n\n        logger.debug('Parsed cues: ' + segments.length + ' cues.');\n\n        return segments;\n    }\n\n    function parseEbmlHeader(data, media, theRange, callback) {\n        if (!data || data.byteLength === 0) {\n            callback(null);\n            return;\n        }\n        let ebmlParser = EBMLParser(context).create({\n            data: data\n        });\n        let duration,\n            segments,\n            segmentEnd,\n            segmentStart;\n        let parts = theRange ? theRange.split('-') : null;\n        let request = null;\n        let info = {\n            url: media,\n            range: {\n                start: parts ? parseFloat(parts[0]) : null,\n                end: parts ? parseFloat(parts[1]) : null\n            },\n            request: request\n        };\n\n        logger.debug('Parse EBML header: ' + info.url);\n\n        // skip over the header itself\n        ebmlParser.skipOverElement(WebM.EBML);\n        ebmlParser.consumeTag(WebM.Segment);\n\n        // segments start here\n        segmentEnd = ebmlParser.getMatroskaCodedNum();\n        segmentEnd += ebmlParser.getPos();\n        segmentStart = ebmlParser.getPos();\n\n        // skip over any top level elements to get to the segment info\n        while (ebmlParser.moreData() &&\n            !ebmlParser.consumeTagAndSize(WebM.Segment.Info, true)) {\n            if (!(ebmlParser.skipOverElement(WebM.Segment.SeekHead, true) ||\n                    ebmlParser.skipOverElement(WebM.Segment.Tracks, true) ||\n                    ebmlParser.skipOverElement(WebM.Segment.Cues, true) ||\n                    ebmlParser.skipOverElement(WebM.Void, true))) {\n                throw new Error('no valid top level element found');\n            }\n        }\n\n        // we only need one thing in segment info, duration\n        while (duration === undefined) {\n            let infoTag = ebmlParser.getMatroskaCodedNum(true);\n            let infoElementSize = ebmlParser.getMatroskaCodedNum();\n\n            switch (infoTag) {\n                case WebM.Segment.Info.Duration.tag:\n                    duration = ebmlParser[WebM.Segment.Info.Duration.parse](infoElementSize);\n                    break;\n                default:\n                    ebmlParser.setPos(ebmlParser.getPos() + infoElementSize);\n                    break;\n            }\n        }\n\n        // once we have what we need from segment info, we jump right to the\n        // cues\n\n        request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            segments = parseSegments(response, segmentStart, segmentEnd, duration);\n            callback(segments);\n        };\n\n        const onloadend = function () {\n            logger.error('Download Error: Cues ' + info.url);\n            callback(null);\n        };\n\n        urlLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n\n        logger.debug('Perform cues load: ' + info.url + ' bytes=' + info.range.start + '-' + info.range.end);\n    }\n\n    function checkConfig() {\n        if (!baseURLController || !baseURLController.hasOwnProperty('resolve')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        checkConfig();\n        let request = null;\n        let baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n        let initRange = representation ? representation.range.split('-') : null;\n        let info = loadingInfo || {\n            range: {\n                start: initRange ? parseFloat(initRange[0]) : null,\n                end: initRange ? parseFloat(initRange[1]) : null\n            },\n            request: request,\n            url: baseUrl ? baseUrl.url : undefined,\n            init: true,\n            mediaType: representation && representation.adaptation ? representation.adaptation.type : null\n        };\n\n        logger.info('Start loading initialization.');\n\n        request = getFragmentRequest(info);\n\n        const onload = function () {\n            // note that we don't explicitly set rep.initialization as this\n            // will be computed when all BaseURLs are resolved later\n            eventBus.trigger(events.INITIALIZATION_LOADED, {\n                representation: representation\n            });\n        };\n\n        const onloadend = function () {\n            eventBus.trigger(events.INITIALIZATION_LOADED, {\n                representation: representation\n            });\n        };\n\n        urlLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n\n        logger.debug('Perform init load: ' + info.url);\n    }\n\n    function loadSegments(representation, type, theRange, callback) {\n        checkConfig();\n        let request = null;\n        let baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n        let media = baseUrl ? baseUrl.url : undefined;\n        let bytesToLoad = 8192;\n        let info = {\n            bytesLoaded: 0,\n            bytesToLoad: bytesToLoad,\n            range: {\n                start: 0,\n                end: bytesToLoad\n            },\n            request: request,\n            url: media,\n            init: false,\n            mediaType: representation && representation.adaptation ? representation.adaptation.type : null\n        };\n\n        callback = !callback ? onLoaded : callback;\n        request = getFragmentRequest(info);\n\n        // first load the header, but preserve the manifest range so we can\n        // load the cues after parsing the header\n        // NOTE: we expect segment info to appear in the first 8192 bytes\n        logger.debug('Parsing ebml header');\n\n        const onload = function (response) {\n            parseEbmlHeader(response, media, theRange, function (segments) {\n                callback(segments, representation, type);\n            });\n        };\n\n        const onloadend = function () {\n            callback(null, representation, type);\n        };\n\n        urlLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(events.SEGMENTS_LOADED, {\n                segments: segments,\n                representation: representation,\n                mediaType: type\n            });\n        } else {\n            eventBus.trigger(events.SEGMENTS_LOADED, {\n                segments: null,\n                representation: representation,\n                mediaType: type,\n                error: new DashJSError(errors.SEGMENT_BASE_LOADER_ERROR_CODE, errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)\n            });\n        }\n    }\n\n    function getFragmentRequest(info) {\n        const request = new FragmentRequest();\n        request.setInfo(info);\n        return request;\n    }\n\n    function reset() {\n        errHandler = null;\n        requestModifier = null;\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nWebmSegmentBaseLoader.__dashjs_factory_name = 'WebmSegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(WebmSegmentBaseLoader);\n"]}